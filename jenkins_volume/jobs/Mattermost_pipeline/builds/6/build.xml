<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1348.v32a_a_f150910e">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@689.veec561a_dee13">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <stagesUUID>9234f3b0-81db-4a5f-8ab1-97f2e0f3c66f</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2144.v077a_d1928a_40">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">try {
            mattermostSend (
            color: &quot;#2A42EE&quot;,
            channel: &apos;Build_BOT&apos;,
            endpoint: &apos;https://mattermost.tech.orange/hooks/crwpfskooj8cunsnsqnd9q1fec&apos;, 
            message: &quot;Build STARTED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
            )               
        sh &apos;&apos;&apos;
            mvn -B -DskipTests clean package
           &apos;&apos;&apos;
            } catch(e) {
                   currentBuild.result = &quot;FAILURE&quot;
            } finally {
                 if(currentBuild.result == &quot;FAILURE&quot;) {
                    mattermostSend (
                       color: &quot;#e00707&quot;,
                        channel: &apos;Build_BOT&apos;, 
                        endpoint: &apos;https://linktomattermost.com/hooks/yuwrgjeh38246239jkfh&apos;,
                         message: &quot;Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                     )
                 } else {
                       mattermostSend (
                           color: &quot;#00f514&quot;,
                            channel: &apos;Build_BOT&apos;, 
                            endpoint: &apos;https://linktomattermost.com/hooks/yuwrgjeh38246239jkfh&apos;,
                           message: &quot;Build SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                            )
                        }                            
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>9234f3b0-81db-4a5f-8ab1-97f2e0f3c66f</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@3802.vd42b_fcf00b_a_c">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>976</queueId>
  <timestamp>1698249570165</timestamp>
  <startTime>1698249570169</startTime>
  <result>FAILURE</result>
  <duration>4913</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Build&apos;) {
      steps {
        script {
        try {
            mattermostSend (
            color: &quot;#2A42EE&quot;,
            channel: &apos;Build_BOT&apos;,
            endpoint: &apos;https://mattermost.tech.orange/hooks/crwpfskooj8cunsnsqnd9q1fec&apos;, 
            message: &quot;Build STARTED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
            )               
        sh &apos;&apos;&apos;
            mvn -B -DskipTests clean package
           &apos;&apos;&apos;
            } catch(e) {
                   currentBuild.result = &quot;FAILURE&quot;
            } finally {
                 if(currentBuild.result == &quot;FAILURE&quot;) {
                    mattermostSend (
                       color: &quot;#e00707&quot;,
                        channel: &apos;Build_BOT&apos;, 
                        endpoint: &apos;https://linktomattermost.com/hooks/yuwrgjeh38246239jkfh&apos;,
                         message: &quot;Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                     )
                 } else {
                       mattermostSend (
                           color: &quot;#00f514&quot;,
                            channel: &apos;Build_BOT&apos;, 
                            endpoint: &apos;https://linktomattermost.com/hooks/yuwrgjeh38246239jkfh&apos;,
                           message: &quot;Build SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                            )
                        }                            
                    }
            }
        }
    }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>244544489</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>612752564</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1290972771</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>39520385</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>216478094</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set">
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.Utils.createStepsBlock</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.Utils.getRestartedStage</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.Utils.updateJobProperties</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.Utils.updateRunAndJobActions</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.agent.impl.Any.getScript</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.agent.impl.Any.hasScmContext</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.agent.impl.Any.isDoCheckout</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.agent.impl.Any.reuseRootAgent</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Agent.&lt;init&gt;</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Agent.getDeclarativeAgent</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Agent.hasAgent</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Agent.populateMap</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Agent.rawClosure</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.&lt;init&gt;</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.agent</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.astUUID</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.environment</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.getEnvVars</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.hasSatisfiedConditions</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.libraries</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.options</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.parameters</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.post</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.stages</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.tools</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Root.triggers</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.&lt;init&gt;</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.agent</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.environment</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.getEnvVars</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.getMatrixCellEnvVars</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.input</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.name</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.options</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.parallel</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.post</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.stages</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.steps</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.tools</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stage.when</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stages.&lt;init&gt;</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.Stages.stages</string>
      <string>org.jenkinsci.plugins.pipeline.modeldefinition.model.StepsBlock.closure</string>
      <string>org.jenkinsci.plugins.workflow.cps.EnvActionImpl.BUILD_NUMBER</string>
      <string>org.jenkinsci.plugins.workflow.cps.EnvActionImpl.BUILD_URL</string>
      <string>org.jenkinsci.plugins.workflow.cps.EnvActionImpl.JOB_NAME</string>
      <string>org.jenkinsci.plugins.workflow.cps.persistence.IteratorHack$Itr.hasNext</string>
      <string>org.jenkinsci.plugins.workflow.cps.persistence.IteratorHack$Itr.next</string>
      <string>org.jenkinsci.plugins.workflow.support.steps.build.RunWrapper.result</string>
    </internalCalls>
    <sandbox>true</sandbox>
    <iota>18</iota>
    <head>1:18</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>